//===================================================================================================================== 
//
// cxcontrolpanel.h : Declaration of classes CCxControlPanel and CCxNullMode.
//
// ****** FOR DESCRIPTION, REVISION HISTORY, ETC, SEE IMPLEMENTATION FILE ******
//
//===================================================================================================================== 


#if !defined(CXCONTROLPANEL_H__)
#define CXCONTROLPANEL_H__


#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

#include "sizebar\szdlgbar.h"       // base classes CSzDlgBarDlg and CSizingTabDlgBar

class CCxViewHint;                  // forward declarations
class CCxModeControl;
class CCxNullMode;
class CCxIdleMode;
class CCxTrialMode;
class CCxContMode;
class CCxTestMode;


//===================================================================================================================== 
// Declaration of class CCxControlPanel
//===================================================================================================================== 
//
class CCxControlPanel : public CSizingTabDlgBar
{
   DECLARE_DYNAMIC( CCxControlPanel )

//===================================================================================================================== 
// CONSTANTS
//===================================================================================================================== 
private:
   static LPCTSTR EMSG_MODESWITCHFAILED;     // error messages generated by the mode control panel
   static LPCTSTR EMSG_OPMODEDISABLED; 


//===================================================================================================================== 
// DATA OBJECTS
//===================================================================================================================== 
private:
   CCxIdleMode* m_pIdleMode;                 // mode controllers for the various CNTRLX op modes...
   CCxTrialMode* m_pTrialMode;
   CCxContMode* m_pContMode;
   CCxTestMode* m_pTestMode;
   CCxNullMode* m_pNullMode;

   CCxModeControl* m_pCurrMode;              // the currently active mode controller 


//===================================================================================================================== 
// CONSTRUCTION/DESTRUCTION
//===================================================================================================================== 
private:
   CCxControlPanel( const CCxControlPanel& src );        // no copy constructor or assignment operator defined
   CCxControlPanel& operator=( const CCxControlPanel& src ); 

public: 
   CCxControlPanel();                                    // constructor 
   ~CCxControlPanel(); 


//===================================================================================================================== 
// MESSAGE MAP HANDLERS
//===================================================================================================================== 
protected:
   afx_msg int OnCreate( LPCREATESTRUCT lpcs );          // create the mode control panel framework
   afx_msg void OnNcLButtonUp(UINT nHitTest, CPoint pt); // hiding control panel forces return to IdleMode

   DECLARE_MESSAGE_MAP()


//===================================================================================================================== 
// OPERATIONS
//===================================================================================================================== 
public:
   VOID OnUpdate( CCxViewHint* pHint );                  // forward CNTRLX doc/view updates to all embedded dlgs
   BOOL SwitchMode( const int iOpMode );                 // change the current CNTRLX operational mode
   VOID Service();                                       // service pending trans. w/ CXDRIVER IAW current op mode
   BOOL CanUpdateVideoCfg();                             // TRUE if video display cfg can be updated in current op mode 
   BOOL CanUpdateFixRewSettings();                       // TRUE fixation/reward settings can be update in curr op mode 
   VOID Refresh();                                       // refresh appearance of currently accessible dialogs
   CCxModeControl* GetModeCtrl( int iOpMode );           // retrieve ptr to one of the mode controller objects
   CCxModeControl* GetCurrentModeCtrl()                  // ptr to the current op mode controller
   {
      return( m_pCurrMode );
   }

   VOID HandleGlobalModeShortcut( UINT nID );            // implements several keybd shortcuts not attchd to menu bar


//===================================================================================================================== 
// IMPLEMENTATION
//===================================================================================================================== 
protected:
   void OnUpdateCmdUI( CFrameWnd* pTarget,               // override to circumvent the auto-disable feature; we use the  
                       BOOL bDisableIfNoHndler )         // Refresh() mechanism instead!
   {
      CSizingTabDlgBar::OnUpdateCmdUI( pTarget, FALSE ); 
   }

};


#endif // !defined(CXCONTROLPANEL_H__)
